package chapter08;

/*
 	== 자바에서의 타입 변환 ==
 	
 */
class Parent{
	void displayInfo() {
		System.out.println("부모입니다.");
	}
	void greet() {
		System.out.println("안녕");
	}
}
class Child extends Parent{
	@Override
	void displayInfo() {
		System.out.println("자식입니다.");
	}
	void game(){
		System.out.println("게임을 합니다.");
	}
}

class Animal{
	void display() {
		System.out.println("동물입니다.");
	}
}

class Dog extends Animal{
	void display() {
		System.out.println("강아지 입니다.");
	}
	void bark() {
		System.out.println("멍멍 짖습니다.");
	}
}

public class A_Class_Type {

	public static void main(String[] args) {
		Parent childObject= new Child();
		childObject.displayInfo();
		childObject.greet();
		//childObject.game(); -error
		/*
		 	자동 형 변환의 경우, 해당 객체는 보존되면서 사용은 부모 객체처럼 사용
		 	>> 두 클래스 간에 공통된 특성이 아닌 경우 자식만의 기능은 사용X
		 */
		Child c1= new Child();
		Parent p1= c1;
		
		/*
		 	=== 클래스의 강제 타입 변환(DownCasting, 다운 캐스팅)
		 	: 부모 클래스 타입으로 변환된 객체를 다시 자식 클래스 타입으로 변환하는 것을 의미
		 	>> 자식 클래스에서 정의된 멤버에 접근 가능
		 */
		Parent p2= new Child(); //자동 형 변환 목적
		Child c2= (Child)p2;
		c2.game();
	}

}











